import{_ as v,o as u,c,x as p,b as a,y as i,z as l,t as n,l as b,n as L,p as h,a as w,j as f,e as g,w as q,s as x}from"./index-BxxWntIH.js";import{M as D}from"./MxadropDown-YUw2Qk2I.js";const M={name:"MxaForm",data(){return{formData:{username:"",email:"",password:""},message:"",usernameError:"",passwordError:""}},methods:{submitForm(e,t){t==="login"?this.handleLogin(e):t==="register"?this.handleRegister(e):console.error("Invalid form type")},validateUsername(){this.formData.username.length>this.usernameMaxLength?this.usernameError="Username cannot exceed "+this.usernameMaxLength+" characters":this.usernameError=""},validatePassword(){!/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/.test(this.formData.password)||this.formData.password.length<this.minPasswordLength?this.passwordError="Password must contain at least one number, one lowercase letter, one uppercase letter, and be at least "+this.minPasswordLength+" characters long":this.passwordError=""}},props:{usernameMaxLength:{type:Number,default:16},minPasswordLength:{type:Number,default:6},formType:{type:String,default:void 0,validator:function(e){return["login","register"].includes(e)}},handleLogin:{type:Function,default:function(e){console.log("Default login handler. Logging in with username:",e.username,"email:",e.email,"and password:",e.password),this.message="Login successful"}},handleRegister:{type:Function,default:function(e){console.log("Default register handler. Registering with username:",e.username,"email:",e.email,"and password:",e.password),this.message="Registration successful"}},Loginsuccess:{type:Function,default:function(e){console.log("Login successful with data:",e)}},Registsuccess:{type:Function,default:function(e){console.log("Registration successful with data:",e)}},size:{type:String,default:"medium",validator:function(e){return["small","medium","large"].includes(e)}}}},m=e=>(h("data-v-662e78c3"),e=e(),w(),e),S={class:"form-group"},F=m(()=>a("label",{for:"username"},"Username:",-1)),E={class:"error-message"},R={class:"form-group"},z=m(()=>a("label",{for:"password"},"Password:",-1)),P={class:"error-message"},U=["disabled"],T={class:"form-group"},I=m(()=>a("label",{for:"username"},"Username:",-1)),V={class:"error-message"},k={class:"form-group"},N=m(()=>a("label",{for:"email"},"Email:",-1)),B={class:"form-group"},C=m(()=>a("label",{for:"password"},"Password:",-1)),H={class:"error-message"},j=["disabled"],A={key:2};function W(e,t,d,_,s,r){return u(),c("div",{class:L(["container",d.size])},[d.formType==="login"||d.formType===void 0?(u(),c("form",{key:0,onSubmit:t[4]||(t[4]=p(o=>r.submitForm(s.formData,d.handleLogin),["prevent"])),class:"form"},[a("div",S,[F,i(a("input",{"onUpdate:modelValue":t[0]||(t[0]=o=>s.formData.username=o),type:"text",id:"username",onInput:t[1]||(t[1]=(...o)=>r.validateUsername&&r.validateUsername(...o)),required:""},null,544),[[l,s.formData.username]])]),a("p",E,n(s.usernameError),1),a("div",R,[z,i(a("input",{"onUpdate:modelValue":t[2]||(t[2]=o=>s.formData.password=o),type:"password",id:"password",onInput:t[3]||(t[3]=(...o)=>r.validatePassword&&r.validatePassword(...o)),required:""},null,544),[[l,s.formData.password]])]),a("p",P,n(s.passwordError),1),a("button",{type:"submit",disabled:s.usernameError||s.passwordError},"Login",8,U)],32)):d.formType==="register"?(u(),c("form",{key:1,onSubmit:t[10]||(t[10]=p(o=>r.submitForm(s.formData,d.handleRegister),["prevent"])),class:"form"},[a("div",T,[I,i(a("input",{"onUpdate:modelValue":t[5]||(t[5]=o=>s.formData.username=o),type:"text",id:"username",onInput:t[6]||(t[6]=(...o)=>r.validateUsername&&r.validateUsername(...o)),required:""},null,544),[[l,s.formData.username]])]),a("p",V,n(s.usernameError),1),a("div",k,[N,i(a("input",{"onUpdate:modelValue":t[7]||(t[7]=o=>s.formData.email=o),type:"email",id:"email",required:""},null,512),[[l,s.formData.email]])]),a("div",B,[C,i(a("input",{"onUpdate:modelValue":t[8]||(t[8]=o=>s.formData.password=o),type:"password",id:"password",onInput:t[9]||(t[9]=(...o)=>r.validatePassword&&r.validatePassword(...o)),required:""},null,544),[[l,s.formData.password]])]),a("p",H,n(s.passwordError),1),a("button",{type:"submit",disabled:s.usernameError||s.passwordError},"Register",8,j)],32)):b("",!0),s.message?(u(),c("p",A,n(s.message),1)):b("",!0)],2)}const Z=v(M,[["render",W],["__scopeId","data-v-662e78c3"]]),G={components:{MxadropDown:D,MxaForm:Z},data(){return{codeLength:0,code1:`
    <MxaForm 
      formType="login"
      :handleLogin="customLoginHandler"
      :Loginsuccess="handleLoginSuccess"
      size="large"
    /> 
    <MxaForm 
      formType="register"
      :handleLogin="customregistHandler"
      :Loginsuccess="handleregistSuccess"
      size="large"
    /> 
  `}},methods:{handleClick(){alert("Button clicked!")}}},J=e=>(h("data-v-4e9b20c9"),e=e(),w(),e),K={class:"content"},O=x(`<h2 data-v-4e9b20c9>MxaForm</h2><p data-v-4e9b20c9>MxaForm组件是一个用于用户登录和注册的表单组件,有基本的内置的验证器，要求</p><h3 data-v-4e9b20c9>Props</h3><p data-v-4e9b20c9>以下是 Mxa-Button 组件的 props 列表：</p><table border="1" data-v-4e9b20c9><thead data-v-4e9b20c9><tr data-v-4e9b20c9><th data-v-4e9b20c9>Props</th><th data-v-4e9b20c9>类型</th><th data-v-4e9b20c9>描述</th><th data-v-4e9b20c9>默认值</th></tr></thead><tbody data-v-4e9b20c9><tr data-v-4e9b20c9><td data-v-4e9b20c9>formType</td><td data-v-4e9b20c9>String</td><td data-v-4e9b20c9>&quot;login&quot;或&quot;register&quot;</td><td data-v-4e9b20c9>undefined</td></tr><tr data-v-4e9b20c9><td data-v-4e9b20c9>usernameMaxLength</td><td data-v-4e9b20c9>Number</td><td data-v-4e9b20c9>设置用户名最大长度</td><td data-v-4e9b20c9>16</td></tr><tr data-v-4e9b20c9><td data-v-4e9b20c9>minPasswordLength</td><td data-v-4e9b20c9>Number</td><td data-v-4e9b20c9>设置密码最小长度</td><td data-v-4e9b20c9>6</td></tr><tr data-v-4e9b20c9><td data-v-4e9b20c9>size</td><td data-v-4e9b20c9>String</td><td data-v-4e9b20c9>可以是&quot;small&quot;, &quot;medium&quot;, &quot;large&quot;，设置组件容器的尺寸</td><td data-v-4e9b20c9>&quot;medium&quot;</td></tr><tr data-v-4e9b20c9><td data-v-4e9b20c9>handleLogin</td><td data-v-4e9b20c9>function</td><td data-v-4e9b20c9>处理登录操作的自定义函数。</td><td data-v-4e9b20c9><pre style="font-weight:bold;font-size:16px;" data-v-4e9b20c9>function(formData) {
    console.log(&quot;Default login handler. Logging in with username:&quot;, formData.username, &quot;email:&quot;, formData.email, &quot;and password:&quot;, formData.password);
    this.message = &quot;Login successful&quot;;
}</pre></td></tr><tr data-v-4e9b20c9><td data-v-4e9b20c9>handleRegister</td><td data-v-4e9b20c9>function</td><td data-v-4e9b20c9>处理注册操作的自定义函数。</td><td data-v-4e9b20c9><pre style="font-weight:bold;font-size:16px;" data-v-4e9b20c9>function(formData) {
    console.log(&quot;Default register handler. Registering with username:&quot;, formData.username, &quot;email:&quot;, formData.email, &quot;and password:&quot;, formData.password);
    his.message = &quot;Registration successful&quot;;
}
        </pre></td></tr><tr data-v-4e9b20c9><td data-v-4e9b20c9>Loginsuccess</td><td data-v-4e9b20c9>function</td><td data-v-4e9b20c9>登录成功的回调函数</td><td data-v-4e9b20c9><pre style="font-weight:bold;font-size:16px;" data-v-4e9b20c9>function(formData) {
    console.log(&quot;Login successful with data:&quot;, formData);
}
        </pre></td></tr><tr data-v-4e9b20c9><td data-v-4e9b20c9>Registsuccess</td><td data-v-4e9b20c9>function</td><td data-v-4e9b20c9>注册成功的回调函数</td><td data-v-4e9b20c9><pre style="font-weight:bold;font-size:16px;" data-v-4e9b20c9>function(formData) {
    console.log(&quot;Registration successful with data:&quot;, formData);
}
        </pre></td></tr></tbody></table><hr data-v-4e9b20c9><h3 data-v-4e9b20c9>formData 数据结构</h3><p data-v-4e9b20c9>formData 是用于存储用户输入数据的对象，包含以下字段:</p><ul data-v-4e9b20c9><li data-v-4e9b20c9>username (String): 用户名</li><li data-v-4e9b20c9>email (String): 电子邮件地址</li><li data-v-4e9b20c9>password (String): 密码</li></ul><hr data-v-4e9b20c9><h3 data-v-4e9b20c9>方法</h3><ul data-v-4e9b20c9><li data-v-4e9b20c9>submitForm(formData, formType):提交表单操作,会调用handelLogin或者handelRegister</li><li data-v-4e9b20c9>validateUsername(): 验证用户名格式。</li><li data-v-4e9b20c9>validatePassword(): 验证密码格式。</li></ul><hr data-v-4e9b20c9><h3 data-v-4e9b20c9>示例</h3>`,14),Q={style:{"margin-left":"30px","background-color":"aliceblue",width:"500px","border-radius":"5px"}},X=J(()=>a("hr",null,null,-1)),Y={class:"code-box"},$={style:{"font-weight":"bold","font-size":"16px"}};function ee(e,t,d,_,s,r){const o=f("MxaForm"),y=f("MxadropDown");return u(),c("div",K,[O,a("div",Q,[g(o,{formType:"login",handleLogin:e.customLoginHandler,Loginsuccess:e.handleLoginSuccess,size:"large"},null,8,["handleLogin","Loginsuccess"]),X,g(o,{formType:"register",handleLogin:e.customregistHandler,Loginsuccess:e.handleregistSuccess,size:"large"},null,8,["handleLogin","Loginsuccess"]),g(y,{dropdownMaxWidth:"1000px",buttonText:"展开代码",buttonStyle:"info"},{default:q(()=>[a("div",Y,[a("pre",$,"          "+n(s.code1)+`
    `,1)])]),_:1})])])}const se=v(G,[["render",ee],["__scopeId","data-v-4e9b20c9"]]);export{se as default};
